{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","vinMessage","querySelector","loseMessage","cellsArray","horizontalMapArray","length","row","i","push","slice","verticalMapArray","newRow","addValues","count2","value2","value4","startButton","startMessage","addEventListener","score","innerText","forEach","el","classList","add","remove","hidden","getRandomCell","cell","getRandomIndex","valueCell","getRandomInt","Math","floor","random","flat","find","item","max","shiftCells","arr","newCells","filter","newCellsLastItem","addCells","Number","verifyMapArray","ifIsMoveInTheGame","checkMoveInTheGame","ev","code","reverse"],"mappings":"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","file":"main.94dea93a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cells = document.querySelectorAll('td');\nconst vinMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nlet cellsArray = [...cells];\n\nconst horizontalMapArray = [];\n\nwhile (cellsArray.length > 0) {\n  const row = [];\n\n  for (let i = 0; i <= 3; i++) {\n    row.push(cellsArray[i]);\n  }\n  cellsArray = cellsArray.slice(4);\n  horizontalMapArray.push(row);\n}\n\nconst verticalMapArray = [];\n\nfor (let i = 0; i < horizontalMapArray.length; i++) {\n  const newRow = [];\n\n  for (const row of horizontalMapArray) {\n    newRow.push(row[i]);\n  }\n  verticalMapArray.push(newRow);\n}\n\nconst addValues = [];\nlet count2 = 9;\nconst value2 = 2;\nconst value4 = 4;\n\nfor (let i = 0; i < 10; i++) {\n  if (count2 !== 0) {\n    addValues.push(value2);\n    count2--;\n    continue;\n  }\n  addValues.push(value4);\n}\n\nconst startButton = document.querySelector('.start');\nconst startMessage = document.querySelector('.message-start');\n\nstartButton.addEventListener('click', () => {\n  score.innerText = 0;\n\n  cells.forEach(el => {\n    el.innerText = '';\n    el.classList = 'field-cell';\n  });\n  startButton.classList.add('restart');\n\n  startButton.innerText = 'Restart';\n  startButton.classList.remove('start');\n  startMessage.hidden = true;\n  vinMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n\n  getRandomCell();\n  getRandomCell();\n});\n\nconst score = document.querySelector('.game-score');\n\ndocument.addEventListener('keydown', (ev) => {\n  if (ev.code === 'ArrowRight') {\n    if (startButton.innerText === 'Start') {\n      return;\n    }\n\n    for (const row of horizontalMapArray) {\n      shiftCells(row);\n      addCells(row);\n      shiftCells(row);\n    }\n    getRandomCell();\n    verifyMapArray();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  if (ev.code === 'ArrowLeft') {\n    if (startButton.innerText === 'Start') {\n      return;\n    }\n\n    for (const row of horizontalMapArray) {\n      row.reverse();\n      shiftCells(row);\n      addCells(row);\n      shiftCells(row);\n      row.reverse();\n    }\n    getRandomCell();\n    verifyMapArray();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  if (ev.code === 'ArrowUp') {\n    if (startButton.innerText === 'Start') {\n      return;\n    }\n\n    for (const row of verticalMapArray) {\n      row.reverse();\n      shiftCells(row);\n      addCells(row);\n      shiftCells(row);\n      row.reverse();\n    }\n    getRandomCell();\n    verifyMapArray();\n  }\n});\n\ndocument.addEventListener('keydown', (ev) => {\n  if (ev.code === 'ArrowDown') {\n    if (startButton.innerText === 'Start') {\n      return;\n    }\n\n    for (const row of verticalMapArray) {\n      shiftCells(row);\n      addCells(row);\n      shiftCells(row);\n    }\n    getRandomCell();\n    verifyMapArray();\n  }\n});\n\nfunction getRandomCell() {\n  const cell = horizontalMapArray[getRandomIndex()][getRandomIndex()];\n\n  if (cell.innerText === '') {\n    const valueCell = addValues[getRandomInt(10)];\n\n    cell.classList.add(`field-cell--${valueCell}`);\n    cell.innerText = valueCell;\n\n    return cell;\n  }\n\n  if (!horizontalMapArray.flat().find(item => item.innerText === '')) {\n    return;\n  }\n  getRandomCell();\n\n  function getRandomIndex() {\n    return Math.floor(Math.random() * 4);\n  }\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction shiftCells(arr) {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (arr[i].innerText !== '') {\n      const newCells = arr.slice(i).filter(el => el.innerText === '');\n      const newCellsLastItem = newCells[newCells.length - 1];\n\n      if (newCells.length > 0) {\n        newCellsLastItem.innerText = arr[i].innerText;\n        arr[i].innerText = '';\n\n        newCellsLastItem.classList\n          .add(`field-cell--${newCellsLastItem.innerText}`);\n        arr[i].classList.remove(arr[i].classList[1]);\n      }\n    }\n  }\n}\n\nfunction addCells(arr) {\n  for (let i = arr.length - 1; i >= 1; i--) {\n    if (arr[i - 1].innerText !== ''\n    && arr[i].innerText === arr[i - 1].innerText) {\n      arr[i].innerText = arr[i].innerText * 2;\n      arr[i].classList.remove(arr[i].classList[1]);\n      arr[i].classList.add(`field-cell--${arr[i].innerText}`);\n      arr[i - 1].innerText = '';\n      arr[i - 1].classList.remove(arr[i - 1].classList[1]);\n      score.innerText = Number(score.innerText) + Number(arr[i].innerText);\n      continue;\n    }\n  }\n}\n\nfunction verifyMapArray() {\n  if (horizontalMapArray.flat().find(item => item.innerText === '2048')) {\n    vinMessage.classList.remove('hidden');\n  }\n\n  let ifIsMoveInTheGame = false;\n\n  checkMoveInTheGame(horizontalMapArray);\n\n  checkMoveInTheGame(verticalMapArray);\n\n  if (!ifIsMoveInTheGame\n    && !horizontalMapArray.flat().find(item => item.innerText === '')) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  function checkMoveInTheGame(arr) {\n    for (const row of arr) {\n      for (let i = 1; i < row.length; i++) {\n        if (row[i].innerText === row[i - 1].innerText) {\n          ifIsMoveInTheGame = true;\n        }\n      }\n    }\n  }\n}\n"]}